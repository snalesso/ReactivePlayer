<UserControl
    x:Class="ReactivePlayer.UI.Wpf.Views.TracksSubsetView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Behaviors="clr-namespace:ReactivePlayer.UI.Wpf.Behaviors"
    xmlns:Converters="clr-namespace:ReactivePlayer.UI.Wpf.Converters"
    xmlns:Daedalus_UI_Converters="clr-namespace:Daedalus.UI.Converters;assembly=Daedalus.UI"
    xmlns:DesignTimeViewModels="clr-namespace:ReactivePlayer.UI.Wpf.ViewModels.DesignTime"
    xmlns:System="clr-namespace:System;assembly=System"
    xmlns:ViewModels="clr-namespace:ReactivePlayer.UI.Wpf.ViewModels"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DataContext="{d:DesignInstance IsDesignTimeCreatable=False,
                                     Type={x:Type ViewModels:TracksSubsetViewModel}}"
    d:DesignHeight="300"
    d:DesignWidth="650"
    Background="{StaticResource MaterialDesignPaper}"
    mc:Ignorable="d">

    <UserControl.Resources>
        <Converters:StringEnumerableJoiner x:Key="StringEnumerableJoiner" />
        <Daedalus_UI_Converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <Daedalus_UI_Converters:ReferenceToVisibilityConverter x:Key="ReferenceToVisibilityConverter" />
    </UserControl.Resources>

    <!--<UserControl.InputBindings>
        <KeyBinding Key="Space" Command="{Binding Resume}" />
        <KeyBinding Key="Space" Command="{Binding Pause}" />
        <KeyBinding Key="Space" Command="{Binding PlayTrack}" CommandParameter="{Binding SelectedTrackViewModel}" />
        <KeyBinding
            Key="Space"
            Command="{Binding PlaybackControlsViewModel.Stop}"
            Modifiers="Alt" />
    </UserControl.InputBindings>-->

    <ListView
        materialDesign:ScrollBarAssist.ButtonsVisibility="Collapsed"
        BorderBrush="{x:Null}"
        BorderThickness="0"
        ItemsSource="{Binding SortedFilteredTrackViewModelsROOC}"
        ScrollViewer.VerticalScrollBarVisibility="Visible"
        SelectedItem="{Binding SelectedTrackViewModel}"
        VirtualizingPanel.IsVirtualizing="True"
        VirtualizingPanel.VirtualizationMode="Recycling">

        <ListView.ItemContainerStyle>
            <Style BasedOn="{StaticResource MaterialDesignGridViewItem}" TargetType="{x:Type ListViewItem}">
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick" />
                <!--<Setter Property="Foreground" Value="Red"></Setter>-->
                <!--<Setter Property="Behaviors:DoubleClick.Command" Value="{Binding PlayTrack}" />
                <Setter Property="Behaviors:DoubleClick.CommandParameter" Value="{Binding}" />-->

                <!--<Style.Triggers>
                    <DataTrigger Binding="{Binding IsLoaded}" Value="true">
                        <Setter Property="Foreground" Value="{StaticResource PrimaryHueMidBrush}"></Setter>
                    </DataTrigger>
                </Style.Triggers>-->

            </Style>
        </ListView.ItemContainerStyle>

        <!--<ListView.ItemTemplate>
            <DataTemplate>
                <GridViewRowPresenter />
            </DataTemplate>
        </ListView.ItemTemplate>-->

        <ListView.View>
            <GridView>
                <!--<GridViewColumn Width="Auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding IsLoaded}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>-->
                <GridViewColumn Width="31">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <!--<Path
                                Width="{Binding Height, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                                Height="12"
                                VerticalAlignment="Center"
                                Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:TracksSubsetView}}}"
                                Stretch="Uniform"
                                Visibility="{Binding IsLoaded, ConverterParameter=True, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
                                <Path.Data>
                                    <CombinedGeometry GeometryCombineMode="Intersect">
                                        <CombinedGeometry.Geometry1>
                                            <PathGeometry Figures="M0 0h24v24H0z" />
                                        </CombinedGeometry.Geometry1>
                                        <CombinedGeometry.Geometry2>
                                            <PathGeometry Figures="M14,3.23V5.29C16.89,6.15 19,8.83 19,12C19,15.17 16.89,17.84 14,18.7V20.77C18,19.86 21,16.28 21,12C21,7.72 18,4.14 14,3.23M16.5,12C16.5,10.23 15.5,8.71 14,7.97V16C15.5,15.29 16.5,13.76 16.5,12M3,9V15H7L12,20V4L7,9H3Z" />
                                        </CombinedGeometry.Geometry2>
                                    </CombinedGeometry>
                                </Path.Data>
                            </Path>-->
                            <materialDesign:PackIcon
                                Width="{Binding Height, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                                Height="15"
                                Margin="0"
                                Padding="0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Kind="VolumeHigh"
                                Visibility="{Binding IsLoaded, ConverterParameter=True, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>

                <GridViewColumn Width="31">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <!--<StackPanel Orientation="Horizontal">-->
                            <!--<Path
                                    Width="{Binding Height, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                                    Height="8"
                                    VerticalAlignment="Center"
                                    Data="{StaticResource Geometries.Heart}"
                                    Fill="Red"
                                    Stretch="Uniform"
                                    Visibility="{Binding IsLoved, ConverterParameter=True, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" />-->
                            <materialDesign:PackIcon
                                Width="{Binding Height, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                                Height="15"
                                Padding="0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="Red"
                                Kind="Heart"
                                Visibility="{Binding IsLoved, ConverterParameter=True, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" />
                            <!--</StackPanel>-->
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>

                <GridViewColumn Width="310" Header="Title">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>

                            <TextBlock
                                x:Name="txt"
                                Text="{Binding Title}"
                                TextTrimming="CharacterEllipsis" />

                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsLoaded}" Value="true">
                                    <DataTrigger.Setters>
                                        <Setter TargetName="txt" Property="FontWeight" Value="Bold" />
                                        <!--<Setter TargetName="txt" Property="Foreground" Value="{StaticResource PrimaryHueMidBrush}" />-->
                                    </DataTrigger.Setters>
                                </DataTrigger>
                            </DataTemplate.Triggers>

                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>

                <GridViewColumn Width="260" Header="Performers">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>

                            <TextBlock
                                x:Name="txt"
                                Text="{Binding PerformersNames, Converter={StaticResource StringEnumerableJoiner}}"
                                TextTrimming="CharacterEllipsis" />

                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsLoaded}" Value="true">
                                    <DataTrigger.Setters>
                                        <Setter TargetName="txt" Property="FontWeight" Value="Bold" />
                                        <!--<Setter TargetName="txt" Property="Foreground" Value="{StaticResource PrimaryHueMidBrush}" />-->
                                    </DataTrigger.Setters>
                                </DataTrigger>
                            </DataTemplate.Triggers>

                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>

                <GridViewColumn Width="260" Header="Album">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>

                            <TextBlock
                                x:Name="txt"
                                Text="{Binding AlbumTitle}"
                                TextTrimming="CharacterEllipsis" />

                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsLoaded}" Value="true">
                                    <DataTrigger.Setters>
                                        <Setter TargetName="txt" Property="FontWeight" Value="Bold" />
                                        <!--<Setter TargetName="txt" Property="Foreground" Value="{StaticResource PrimaryHueMidBrush}" />-->
                                    </DataTrigger.Setters>
                                </DataTrigger>
                            </DataTemplate.Triggers>

                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>

                <GridViewColumn Width="108" Header="Added on">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>

                            <TextBlock
                                x:Name="txt"
                                Text="{Binding AddedToLibraryDateTime, Mode=OneWay, StringFormat=\{0:dd/MM/yy HH:mm\}}"
                                TextTrimming="CharacterEllipsis" />

                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsLoaded}" Value="true">
                                    <DataTrigger.Setters>
                                        <Setter TargetName="txt" Property="FontWeight" Value="Bold" />
                                        <!--<Setter TargetName="txt" Property="Foreground" Value="{StaticResource PrimaryHueMidBrush}" />-->
                                    </DataTrigger.Setters>
                                </DataTrigger>
                            </DataTemplate.Triggers>

                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
            </GridView>
        </ListView.View>

        <ListView.ContextMenu>
            <ContextMenu>
                <MenuItem
                    Command="{Binding PlayTrack}"
                    CommandParameter="{Binding SelectedTrackViewModel}"
                    Header="Play"
                    InputGestureText="ENTER">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="Play" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <!--<MenuItem Command="{Binding AddTrackToLibrary}" Header="Add track" />-->
                <MenuItem Command="{Binding SelectedTrackViewModel.EditTrackTags}" Header="Edit">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="Pencil" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Remove ...">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="CloseThick" />
                    </MenuItem.Icon>
                    <MenuItem.Items>
                        <MenuItem
                            Command="{Binding RemoveTrackFromSubset}"
                            CommandParameter="{Binding SelectedTrackViewModel}"
                            Header="... from playlist"
                            InputGestureText="CANC"
                            Visibility="{Binding RemoveTrackFromSubset, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="BookmarkRemove" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            Command="{Binding RemoveTrackFromLibrary}"
                            CommandParameter="{Binding SelectedTrackViewModel}"
                            Header="... from library"
                            InputGestureText="SHIFT+CANC">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="Delete" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            Header="... and delete"
                            InputGestureText="CTRL+SHIFT+CANC"
                            IsEnabled="False">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="FileRemove" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem.Items>
                </MenuItem>
                <Separator />
                <MenuItem Command="{Binding SelectedTrackViewModel.ShowInFileManager}" Header="Show in folder">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="FolderOpen" />
                    </MenuItem.Icon>
                </MenuItem>
            </ContextMenu>
        </ListView.ContextMenu>

    </ListView>

</UserControl>