<UserControl
    x:Class="ReactivePlayer.UI.WPF.Views.LibrarySidebarView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Behaviors="clr-namespace:ReactivePlayer.UI.WPF.Behaviors"
    xmlns:DesignTimeViewModels="clr-namespace:ReactivePlayer.UI.WPF.ViewModels.DesignTime"
    xmlns:Interactions="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ViewModels="clr-namespace:ReactivePlayer.UI.WPF.ViewModels"
    xmlns:Views="clr-namespace:ReactivePlayer.UI.WPF.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DataContext="{d:DesignInstance Type=ViewModels:LibraryViewModel,
                                     IsDesignTimeCreatable=False}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <Grid>
        <Grid.RowDefinitions>
            <!--<RowDefinition Height="Auto" />
            <RowDefinition Height="8" />-->
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--<TextBlock Text="{Binding ActiveItem.Name}" />-->

        <TreeView
            Grid.Row="2"
            HorizontalContentAlignment="Stretch"
            BorderBrush="{x:Null}"
            BorderThickness="0"
            ItemsSource="{Binding TracksSubsetViewModelsROOC}">

            <Interactions:Interaction.Behaviors>
                <Behaviors:BindableSelectedItemBehavior SelectedItem="{Binding ActiveItem, Mode=TwoWay}" />
            </Interactions:Interaction.Behaviors>

            <TreeView.Resources>

                <Color x:Key="WindowColor">#FFE8EDF9</Color>
                <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
                <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

                <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
                <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
                <Color x:Key="DisabledForegroundColor">#FF888888</Color>

                <Color x:Key="SelectedBackgroundColor">#BAD1FF</Color>
                <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>
                <Color x:Key="SelectedForegroundColor">White</Color>

                <Color x:Key="ControlLightColor">White</Color>
                <Color x:Key="ControlMediumColor">#FF7381F9</Color>
                <Color x:Key="ControlDarkColor">#FF211AA9</Color>

                <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
                <Color x:Key="ControlPressedColor">#FF211AA9</Color>


                <Color x:Key="GlyphColor">#FF444444</Color>
                <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

                <!--  Border colors  -->
                <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
                <Color x:Key="BorderMediumColor">#FF888888</Color>
                <Color x:Key="BorderDarkColor">#FF444444</Color>

                <Color x:Key="PressedBorderLightColor">#FF888888</Color>
                <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

                <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
                <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

                <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

                <!--  Control-specific resources.  -->
                <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
                <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
                <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

                <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

                <LinearGradientBrush x:Key="MenuPopupBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0" Color="{DynamicResource ControlLightColor}" />
                    <GradientStop Offset="0.5" Color="{DynamicResource ControlMediumColor}" />
                    <GradientStop Offset="1" Color="{DynamicResource ControlLightColor}" />
                </LinearGradientBrush>

                <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" StartPoint="0,0" EndPoint="1,0">
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Offset="0" Color="#000000FF" />
                            <GradientStop Offset="0.4" Color="#600000FF" />
                            <GradientStop Offset="0.6" Color="#600000FF" />
                            <GradientStop Offset="1" Color="#000000FF" />
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>

                <HierarchicalDataTemplate DataType="{x:Type ViewModels:FolderPlaylistViewModel}" ItemsSource="{Binding PlaylistViewModelsROOC}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding Name, Mode=OneWay}" />
                        <TextBlock
                            Grid.Column="2"
                            Margin="8,0,0,0"
                            Text="{Binding SortedFilteredTrackViewModelsROOC.Count, Mode=OneWay, StringFormat=(\{0:D\})}" />
                    </Grid>
                </HierarchicalDataTemplate>

                <DataTemplate DataType="{x:Type ViewModels:SimplePlaylistViewModel}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding Name, Mode=OneWay}" />
                        <TextBlock
                            Grid.Column="2"
                            Margin="8,0,0,0"
                            Text="{Binding SortedFilteredTrackViewModelsROOC.Count, Mode=OneWay, StringFormat=(\{0:D\})}" />
                    </Grid>
                </DataTemplate>

                <DataTemplate DataType="{x:Type ViewModels:AllTracksViewModel}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding Name, Mode=OneWay}" />
                        <TextBlock
                            Grid.Column="2"
                            Margin="8,0,0,0"
                            Text="{Binding SortedFilteredTrackViewModelsROOC.Count, Mode=OneWay, StringFormat=(\{0:D\})}" />
                    </Grid>
                </DataTemplate>

                <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="Padding" Value="5 0">
                        <!--<Setter.Value>
                            <Thickness
                                Bottom="4"
                                Left="4"
                                Right="0"
                                Top="4" />
                        </Setter.Value>-->
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">

                                <Grid Background="Transparent">
                                    <Path
                                        x:Name="Arrow"
                                        Width="8"
                                        Height="8"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Data="M 2 0 L 8 4 L 2 8 Z"
                                        Stretch="Uniform">
                                        <Path.Fill>
                                            <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                        </Path.Fill>
                                    </Path>

                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CheckStates">
                                            <VisualState x:Name="Checked">

                                                <Storyboard>

                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform)">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <RotateTransform Angle="90" />
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>

                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unchecked" />
                                            <VisualState x:Name="Indeterminate" />
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Grid>

                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style x:Key="TreeViewItemFocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border>
                                    <Rectangle
                                        Margin="0"
                                        Opacity="0"
                                        Stroke="Black"
                                        StrokeDashArray="1 2"
                                        StrokeThickness="5" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                    <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                    <Setter Property="Padding" Value="5" />
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">

                                <Grid Grid.IsSharedSizeScope="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="expander" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <ToggleButton
                                        x:Name="Expander"
                                        Grid.Column="0"
                                        ClickMode="Press"
                                        IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{StaticResource ExpandCollapseToggleStyle}" />
                                    <Border
                                        x:Name="Bd"
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                        <ContentPresenter
                                            x:Name="PART_Header"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            ContentSource="Header" />
                                    </Border>

                                    <ItemsPresenter
                                        x:Name="ItemsHost"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Visibility="Collapsed" />

                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="SelectionStates">
                                            <VisualState x:Name="Selected">
                                                <Storyboard>
                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                        <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedBackgroundColor}" />
                                                    </ColorAnimationUsingKeyFrames>
                                                    <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_Header" Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)">
                                                        <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedForegroundColor}" />
                                                    </ColorAnimationUsingKeyFrames>-->
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unselected" />
                                            <VisualState x:Name="SelectedInactive">
                                                <Storyboard>
                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                        <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedUnfocusedColor}" />
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="ExpansionStates">
                                            <VisualState x:Name="Expanded">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Collapsed" />
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="HasHeader" Value="false" />
                                            <Condition Property="Width" Value="Auto" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="HasHeader" Value="false" />
                                            <Condition Property="Height" Value="Auto" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

            </TreeView.Resources>

        </TreeView>

    </Grid>

</UserControl>
